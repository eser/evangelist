{"version":3,"file":"index.min.js","sources":["../src/compose.ts","../src/curry.ts","../src/curryRight.ts","../src/decorate.ts","../src/dispatcher.ts","../src/emitter.ts","../src/iterate.ts"],"sourcesContent":["type ComposableFunction = (...args: Array<any>) => any;\n\nfunction compose(...funcs: Array<ComposableFunction>): ComposableFunction {\n    return funcs.reduce(\n        (previousFunction: ComposableFunction, currentFunction: ComposableFunction) => {\n            return (...args: Array<any>): any => {\n                return currentFunction(previousFunction(...args));\n            }\n        },\n    );\n}\n\nexport {\n    compose as default,\n};\n","function curry(func: (...args: Array<any>) => any, ...args: Array<any>): (...args: Array<any>) => any {\n    return (...args2: Array<any>) => func(...args, ...args2);\n};\n\nexport {\n    curry as default,\n};\n","function curryRight(func: (...args: Array<any>) => any, ...args: Array<any>): (...args: Array<any>) => any {\n    return (...args2: Array<any>) => func(...args2, ...args);\n};\n\nexport {\n    curryRight as default,\n};\n","function decorate(target: Function, decorator: Function) {\n    return function (...args: Array<any>): any {\n        return decorator(...args, target);\n    };\n};\n\nexport {\n    decorate as default,\n};\n","type MutatorType = (state: any, next: MutatorType) => any | Promise<any>;\ntype SubscriberType = (entry: any) => void;\n\nasync function dispatcher(state: any, mutators: Array<MutatorType>, subscribers?: Array<SubscriberType>): Promise<any> {\n    const hasSubscribers = (subscribers !== undefined);\n    let index = 0;\n\n    const next = async (newState) => {\n        const layer = mutators[index];\n\n        if (layer === undefined) {\n            return newState;\n        }\n\n        index += 1;\n\n        return await layer(\n            newState,\n            async (currentState) => {\n                if (hasSubscribers) {\n                    // @ts-ignore\n                    (<any>subscribers).forEach(subscriber => {\n                        subscriber({ action: layer.name, previousState: newState, newState: currentState });\n                    });\n                }\n\n                return await next(currentState);\n            }\n        );\n    };\n\n    return await next(state);\n}\n\nexport {\n    MutatorType,\n    SubscriberType,\n    dispatcher as default,\n};\n","type EventType = (...args: Array<any>) => void;\ntype EventsTableType = { [key: string]: Array<EventType> };\ntype SubscriberType = (entry: any) => void;\n\nasync function emitter(events: EventsTableType, eventName: string, args?: Array<any>, subscribers?: Array<SubscriberType>): Promise<void> {\n    const hasSubscribers = (subscribers !== undefined);\n    const isEventWildcard = (eventName === '*');\n    const argsPass = (args !== undefined) ? args : [];\n\n    for (const eventKey in events) {\n        if (!isEventWildcard && eventName !== eventKey) {\n            continue;\n        }\n\n        for (const eventSubscriber of events[eventKey]) {\n            if (hasSubscribers) {\n                // @ts-ignore\n                (<any>subscribers).forEach(subscriber => {\n                    subscriber({ event: eventKey, subscriber: eventSubscriber.name, args: args });\n                });\n            }\n\n            await eventSubscriber(...argsPass);\n        }\n    }\n}\n\nexport {\n    EventType,\n    EventsTableType,\n    SubscriberType,\n    emitter as default,\n};\n","async function iterate(iterable: Iterable<any> | Promise<Iterable<any>>, func: (...args: Array<any>) => Promise<any> | any): Promise<void> {\n    for (const value of await iterable) {\n        await func(value);\n    }\n};\n\nexport {\n    iterate as default,\n};\n"],"names":[],"mappings":"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"}